language: python
dist: xenial
services:
- postgresql
- redis-server
stages:
- lint
- test
- test-docker
- deploy
env:
  PEEWEE_URL: postgres://postgres:@localhost:5432/pacifica_ingest
script:
- pip install .
- coverage run --include='*/site-packages/pacifica/ingest/*' -m pytest -sxv tests
- coverage combine .coverage*
- coverage report -m --fail-under 100
before_script:
- pip install ansible
- ansible-galaxy install pacifica.ansible_pacifica pacifica.ansible_travis
- ansible-playbook ~/.ansible/roles/pacifica.ansible_travis/molecule/common/playbook.yml -i ~/.ansible/roles/pacifica.ansible_travis/molecule/common/inventory.yml -e "ansible_python_interpreter=/home/travis/virtualenv/python${TRAVIS_PYTHON_VERSION}/bin/python travis_virtualenv=python${TRAVIS_PYTHON_VERSION} github_repository=ingest"
- |
  pushd tests/test_data
  for x in good bad-project bad-mimetype bad-hashsum ; do
    cp metadata-files/${x}-md.json metadata.txt
    tar -cf ${x}.tar metadata.txt data
  done
  cp metadata-files/bad-json-md.notjson metadata.txt
  tar -cf bad-json.tar metadata.txt data
  popd
- curl 'localhost:8051/getid?range=1000&mode=file'
jobs:
  include:
  - stage: lint
    python: 3.6
    script: pre-commit run -a
    before_script: skip
  - python: 2.7
    script: pre-commit run -a
    before_script: skip
  - stage: test
    python: 3.6
  - python: 2.7
  - stage: test-docker
    sudo: required
    python: 3.6
    services:
    - docker
    script:
    - |
      docker-compose build --pull;
      docker-compose pull;
      docker-compose up -d;
    - |
      pip install pacifica-cli;
      mkdir ~/.pacifica-cli;
      cp travis/uploader.json ~/.pacifica-cli/uploader.json
      printf 'http://localhost:8066/upload\nhttp://localhost:8066/get_state\nhttp://localhost:8181/uploader\nhttp://localhost:8181/ingest\nhttp://localhost:8081\nhttp://localhost:8181/status/transactions/by_id\nTrue\nNone\n' | pacifica-cli --config ~/.pacifica-cli/uploader.json configure;
      cd tests;
    - |
      MAX_TRIES=60;
      HTTP_CODE=$(docker-compose exec metadataserver curl -sL -w "%{http_code}\\n" localhost:8121/keys -o /dev/null || true);
      while [[ $HTTP_CODE != 200 && $MAX_TRIES > 0 ]] ; do
        sleep 2;
        HTTP_CODE=$(docker-compose exec metadataserver curl -sL -w "%{http_code}\\n" localhost:8121/keys -o /dev/null || true);
        MAX_TRIES=$(( MAX_TRIES - 1 ));
      done;
      docker-compose exec metadataserver curl -sL -w "%{http_code}\\n" localhost:8121/keys
    - |
      docker-compose exec metadataserver /bin/bash -c 'cd /usr/src/app/tests; python test_files/loadit_test.py';
      curl http://127.0.0.1:8181/status/users/search/dmlb2001/simple;
      pacifica-cli --config ~/.pacifica-cli/uploader.json upload --logon 10 test_data
  - stage: deploy
    services: []
    language: python
    before_install: skip
    before_script: skip
    script: skip
    python: 3.6
    deploy:
      skip_cleanup: true
      provider: pypi
      user: dmlb2000
      distributions: sdist bdist_wheel
      password:
        secure: dspmJGqWBVYbNImug5s7gchNfp2B9frCHGEpkfZth78FTzK00f6X8JjYqy7gwychiOD/NFD6WhZSy7vqv2vzDXbk8pJrcJ6gwd+2ZGcoqdp6v3RwYq6ntsJhtDvmWD6oIs8hx+JzAcYOBKfzHg3wDZegM+VfDJfGA+xqy/fHeBSORh1WSaIDOq2u/Gnufg6HOIZxd47VzKeTMgJcrF1Qoa9P2nTpxGBDrKBOFodvTay6qQso2F8JMHtpqHabfvq7FjvOCarjLPlwWTfFFEIP87rDcCAK4YKUjyU8hGedekhLOMSabbTQpcHMYFK1rMpCPuzIMYFe/GApgdY6PpHnDWv/t2zHg6BhAtpT7qhnOG8GK0jA7uHsiOYEjaOUIYhEZvS301B1fqSy1jsm55tmbekQF0AIyQLn8EhbVFSMxXxtn/DDBkswDgayMSdNaPZtQsQMba4tDt8GqPrloBfmaXfGyXcrLD9zYiDR7Nn4EVIoV0nsK04GPUT9gB7a5I6LskI6D2ri3/3a18rAfrJBltnkvPzLS3rRbmj5v01kChmQ4md45Xr15OKg4j9gLzOTMFgpcHIMsl1Od3gE64Pb7X5/x8fB957qwtx+NnEZ+VcWPgzvU+3Op8laHh3mUHfbq/GmVo4fD162dnDRuNjEp4Tgom10Yu+l/tGkw67H2Io=
      on:
        tags: true
  - services: []
    language: python
    before_install: skip
    before_script: skip
    script: skip
    python: 2.7
    deploy:
      skip_cleanup: true
      provider: pypi
      user: dmlb2000
      distributions: bdist_wheel
      password:
        secure: dspmJGqWBVYbNImug5s7gchNfp2B9frCHGEpkfZth78FTzK00f6X8JjYqy7gwychiOD/NFD6WhZSy7vqv2vzDXbk8pJrcJ6gwd+2ZGcoqdp6v3RwYq6ntsJhtDvmWD6oIs8hx+JzAcYOBKfzHg3wDZegM+VfDJfGA+xqy/fHeBSORh1WSaIDOq2u/Gnufg6HOIZxd47VzKeTMgJcrF1Qoa9P2nTpxGBDrKBOFodvTay6qQso2F8JMHtpqHabfvq7FjvOCarjLPlwWTfFFEIP87rDcCAK4YKUjyU8hGedekhLOMSabbTQpcHMYFK1rMpCPuzIMYFe/GApgdY6PpHnDWv/t2zHg6BhAtpT7qhnOG8GK0jA7uHsiOYEjaOUIYhEZvS301B1fqSy1jsm55tmbekQF0AIyQLn8EhbVFSMxXxtn/DDBkswDgayMSdNaPZtQsQMba4tDt8GqPrloBfmaXfGyXcrLD9zYiDR7Nn4EVIoV0nsK04GPUT9gB7a5I6LskI6D2ri3/3a18rAfrJBltnkvPzLS3rRbmj5v01kChmQ4md45Xr15OKg4j9gLzOTMFgpcHIMsl1Od3gE64Pb7X5/x8fB957qwtx+NnEZ+VcWPgzvU+3Op8laHh3mUHfbq/GmVo4fD162dnDRuNjEp4Tgom10Yu+l/tGkw67H2Io=
      on:
        tags: true
install:
- pip install -r requirements-dev.txt
- pip freeze
